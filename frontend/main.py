"""
–ü—Ä–æ–≥—Ä–∞–º–º–∞: Frontend —á–∞—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞
–í–µ—Ä—Å–∏—è: 1.0
"""

import os

import yaml
import streamlit as st
from src.data.get_data import load_data, get_dataset
from src.plotting.charts import barplot_group, kdeplotting, scatter_plot, bar_plot
from src.train.training import start_training
from src.evaluate.evaluate import evaluate_input, evaluate_from_file

CONFIG_PATH = "../config/params.yml"


def main_page():
    """
    –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞
    """
    st.image(
        "https://techcrunch.com/wp-content/uploads/2015/11/shutterstock_302406614.png",
        width=600,
    )

    st.markdown("# –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞")
    st.title("MLOps project: Credit scoring challenge to identify who will experience financial hardship in the next two years üåêüè¶ ")
    st.write(
        """
        –ê–ª–≥–æ—Ä–∏—Ç–º—ã –∫—Ä–µ–¥–∏—Ç–Ω–æ–≥–æ —Å–∫–æ—Ä–∏–Ω–≥–∞, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–µ—Ñ–æ–ª—Ç–∞, ‚Äî —ç—Ç–æ –º–µ—Ç–æ–¥,
        –∫–æ—Ç–æ—Ä—ã–π –±–∞–Ω–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–æ–≥–æ, —Å–ª–µ–¥—É–µ—Ç –ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∫—Ä–µ–¥–∏—Ç. –≠—Ç–æ—Ç –∫–æ–Ω–∫—É—Ä—Å —Ç—Ä–µ–±—É–µ—Ç, 
        —á—Ç–æ–±—ã —É—á–∞—Å—Ç–Ω–∏–∫–∏ —É–ª—É—á—à–∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–µ–ª –≤ –∫—Ä–µ–¥–∏—Ç–Ω–æ–º —Å–∫–æ—Ä–∏–Ω–≥–µ,–ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ –∫—Ç–æ-—Ç–æ –∏—Å–ø—ã—Ç–∞–µ—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏—è –≤ —Å–ª–µ–¥—É—é—â–∏–µ –¥–≤–∞ –≥–æ–¥–∞.
        –¶–µ–ª—å—é —ç—Ç–æ–≥–æ –∫–æ–Ω–∫—É—Ä—Å–∞ —è–≤–ª—è–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏, –∫–æ—Ç–æ—Ä—É—é –∑–∞–µ–º—â–∏–∫–∏ —Å–º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –Ω–∞–∏–ª—É—á—à–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä–µ—à–µ–Ω–∏–π.
"""
    )

    # name of the columns
    st.markdown(
        """
        ### –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª–µ–π 
            - Id -- –ò–Ω–¥–µ–∫—Å–Ω–∞—è –∫–æ–ª–æ–Ω–∫–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∞—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏.
            - SeriousDlqin2yrs -- –ë–∏–Ω–∞—Ä–Ω—ã–π –ø—Ä–∏–∑–Ω–∞–∫, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, –∏–º–µ–ª –ª–∏ –∑–∞–µ–º—â–∏–∫ —Å–µ—Ä—å–µ–∑–Ω—É—é –ø—Ä–æ—Å—Ä–æ—á–∫—É –ø–ª–∞—Ç–µ–∂–µ–π –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–≤—É—Ö –ª–µ—Ç.    –ó–Ω–∞—á–µ–Ω–∏–µ 1 –æ–∑–Ω–∞—á–∞–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ—Å—Ä–æ—á–∫–∏, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ 0 - –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ—Å—Ä–æ—á–∫–∏.
            - Revolving -- –î–æ–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±–µ—Å–ø–µ—á–µ–Ω–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –ª–∏–Ω–∏–π. –≠—Ç–æ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—É–º–º—ã –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ –∫—Ä–µ–¥–∏—Ç–Ω—ã–º –∫–∞—Ä—Ç–∞–º –∫ –ª–∏–º–∏—Ç–∞–º –ø–æ –∫—Ä–µ–¥–∏—Ç–Ω—ã–º –∫–∞—Ä—Ç–∞–º.
            - age -- –í–æ–∑—Ä–∞—Å—Ç –∑–∞–µ–º—â–∏–∫–∞.
            - NumberOfTime30 -- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑, –∫–æ–≥–¥–∞ –∑–∞–µ–º—â–∏–∫ –∏–º–µ–ª –ø—Ä–æ—Å—Ä–æ—á–∫—É –ø–ª–∞—Ç–µ–∂–µ–π –Ω–∞ 30-59 –¥–Ω–µ–π, –Ω–æ –Ω–µ —Ö—É–∂–µ.
            - DebtRatio -- –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –¥–æ–ª–≥–∞ –∫ –¥–æ—Ö–æ–¥—É –∑–∞–µ–º—â–∏–∫–∞.
            - MonthlyIncome -- –ï–∂–µ–º–µ—Å—è—á–Ω—ã–π –¥–æ—Ö–æ–¥ –∑–∞–µ–º—â–∏–∫–∞.
            - NumberOfOpen  -- –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –ª–∏–Ω–∏–π –∏ –∫—Ä–µ–¥–∏—Ç–æ–≤.
            - NumberOfTimes90 -- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑, –∫–æ–≥–¥–∞ –∑–∞–µ–º—â–∏–∫ –∏–º–µ–ª –ø—Ä–æ—Å—Ä–æ—á–∫—É –ø–ª–∞—Ç–µ–∂–µ–π –Ω–∞ 90+ –¥–Ω–µ–π.
            - NumberRealEstate -- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–ø–æ—Ç–µ—á–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤ –∏ –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –ª–∏–Ω–∏–π –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å.
            - NumberOfTime60 -- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑, –∫–æ–≥–¥–∞ –∑–∞–µ–º—â–∏–∫ –∏–º–µ–ª –ø—Ä–æ—Å—Ä–æ—á–∫—É –ø–ª–∞—Ç–µ–∂–µ–π –Ω–∞ 60-89 –¥–Ω–µ–π, –Ω–æ –Ω–µ —Ö—É–∂–µ.
            - NumberOfDependents -- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤ –∑–∞–µ–º—â–∏–∫–∞ (—Å—É–ø—Ä—É–≥, –¥–µ—Ç–∏ –∏ —Ç.–¥.).
    """
    )


def exploratory():
    """
    Exploratory data analysis
    """
    st.markdown("# Exploratory data analysisÔ∏è")

    with open(CONFIG_PATH) as file:
        config = yaml.load(file, Loader=yaml.FullLoader)

    # load and write dataset
    data = get_dataset(dataset_path=config["preprocessing"]["train_path"])
    st.write(data.head())

    # plotting with checkbox
    age_seriousdlqin2yrs = st.sidebar.checkbox("–í–æ–∑—Ä–∞—Å—Ç-–ö –≤—ã–¥–∞—á–∏ –∫—Ä–µ–¥–∏—Ç–∞")
    revolving_seriousdlqin2yrs = st.sidebar.checkbox("–ù–µ–æ–±–µ—Å–ø–µ—á–µ–Ω–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ –ª–∏–Ω–∏–∏-–ö –≤—ã–¥–∞—á–∏ –∫—Ä–µ–¥–∏—Ç–∞")
    numberofdependents_seriousdlqin2yrs = st.sidebar.checkbox("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–æ–≤ -–ö –≤—ã–¥–∞—á–∏ –∫—Ä–µ–¥–∏—Ç–∞")
    numberrealestatel_seriousdlqin2yrs = st.sidebar.checkbox("–ö—Ä–µ–¥–∏—Ç–Ω—ã–µ –ª–∏–Ω–∏–∏ –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ ")

    if age_seriousdlqin2yrs:
        st.write("**–ì–∏–ø–æ—Ç–µ–∑–∞ ‚Ññ1** -–í–æ–∑—Ä–∞—Å—Ç —Ö–æ—Ä—à–∏—Ö –∑–∞–µ–º—â–∏–∫–æ–≤ –±–æ–ª—å—à–µ, –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø–ª–æ—Ö–∏–º–∏ (—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–Ω–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ñ–ª–∞–≥–∞ –¥–µ—Ñ–æ–ª—Ç–∞ —Å–º–µ—â–µ–Ω–æ –≤ –±–æ–ª—å—à—É—é —Å—Ç—Ä–æ–Ω—É –ø—Ä–∏ Targe =0),–≤–æ–∑—Ä–∞—Ç–Ω—ã–µ –±–æ–ª–µ–µ –ø–ª–∞—Ç–µ–∂–µ—Å–ø–æ—Å–æ–±–Ω—ã–µ")
        st.pyplot(
            kdeplotting(
                data=data,
                data_x="age",
                hue="SeriousDlqin2yrs",
                title="–í–æ–∑—Ä–∞—Å—Ç-–ö –≤—ã–¥–∞—á–∏ –∫—Ä–µ–¥–∏—Ç–∞",
            )

        )
        st.write("- –í—ã–≤–æ–¥ –ø–æ –¥–∞–Ω–Ω–æ–π –≥–∏–ø–æ—Ç–µ–∑—ã, —Ç–µ–º —Å—Ç—Ä–∞—à–µ –ª—é–¥–∏ —Ç–µ–º –±–æ–ª–ª–µ–µ –æ–Ω–∏ –ø–ª–∞—Ç–µ–∂–æ—Å–ø–æ—Å–æ–±–Ω—ã. ")
    if revolving_seriousdlqin2yrs:
        st.write("**–ì–∏–ø–æ—Ç–µ–∑–∞ ‚Ññ2** -–í—ã—Å–æ–∫–∞—è –¥–æ–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±–µ—Å–ø–µ—á–µ–Ω–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –ª–∏–Ω–∏–π (RevolvingUtilizationOfUnsecuredLines) "
                 "—Å–≤—è–∑–∞–Ω–∞ —Å –±–æ–ª—å—à–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é —Å–µ—Ä—å–µ–∑–Ω–æ–π –ø—Ä–æ—Å—Ä–æ—á–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π (SeriousDlqin2yrs). –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö —Å—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ "
                 "–ø–æ –∫—Ä–µ–¥–∏—Ç–Ω—ã–º –∫–∞—Ä—Ç–∞–º –±–ª–∏–∑–∫–∞ –∏–ª–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ –ª–∏–º–∏—Ç—ã, –º–æ–≥—É—Ç –∏—Å–ø—ã—Ç—ã–≤–∞—Ç—å —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º –¥–æ–ª–≥–∞.")
        st.pyplot(
            scatter_plot(
                X=data["Revolving"],
                y=data["SeriousDlqin2yrs"],
                x_label="Revolving",
                y_label="SeriousDlqin2yrs",
                title="–ù–µ–æ–±–µ—Å–ø–µ—á–µ–Ω–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ –ª–∏–Ω–∏–∏-–ö –≤—ã–¥–∞—á–∏ –∫—Ä–µ–¥–∏—Ç–∞",
            )
        )
        st.write("- –í–∏–∑—É–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å–≤—è–∑—å –º–µ–∂–¥—É –¥–æ–ª–µ–π "
                 "–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±–µ—Å–ø–µ—á–µ–Ω–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –ª–∏–Ω–∏–π –∏ —Å–µ—Ä—å–µ–∑–Ω–æ–π –ø—Ä–æ—Å—Ä–æ—á–∫–æ–π –ø–ª–∞—Ç–µ–∂–µ–π. –ó–∞–µ–º—â–∏–∫–∏ —Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–π –¥–æ–ª–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±–µ—Å–ø–µ—á–µ–Ω–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –ª–∏–Ω–∏–π (–±–ª–∏–∑–∫–æ–π –∫ 1) –∏–º–µ—é—Ç –±–æ–ª—å—à—É—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å—Ç–æ–ª–∫–Ω—É—Ç—å—Å—è —Å —Å–µ—Ä—å–µ–∑–Ω–æ–π –ø—Ä–æ—Å—Ä–æ—á–∫–æ–π –ø–ª–∞—Ç–µ–∂–µ–π. –° –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã, "
                 "–∑–∞–µ–º—â–∏–∫–∏ —Å –±–æ–ª–µ–µ –Ω–∏–∑–∫–æ–π –¥–æ–ª–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–µ–æ–±–µ—Å–ø–µ—á–µ–Ω–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –ª–∏–Ω–∏–π (–±–ª–∏–∑–∫–æ–π –∫ 0) –∏–º–µ—é—Ç –º–µ–Ω—å—à—É—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–µ—Ä—å–µ–∑–Ω–æ–π –ø—Ä–æ—Å—Ä–æ—á–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π.")
    if numberofdependents_seriousdlqin2yrs:
        st.write("**–ì–∏–ø–æ—Ç–µ–∑–∞ ‚Ññ3** –ë–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–µ–≤ (NumberOfDependents) –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω–æ —Å –±–æ–ª–µ–µ –Ω–∏–∑–∫–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é —Å–µ—Ä—å–µ–∑–Ω–æ–π –ø—Ä–æ—Å—Ä–æ—á–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π. "
                 "–ó–∞–µ–º—â–∏–∫–∏ —Å —Å–µ–º–µ–π–Ω—ã–º–∏ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –±–æ–ª–µ–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∏ —Å—Ç–∞—Ä–∞—Ç—å—Å—è –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞.")
        st.pyplot(
            barplot_group(
                data=data,
                col_main="NumberOfDependents",
                col_group="SeriousDlqin2yrs",
                title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∂–¥–∏–≤–µ–Ω—Ü–æ–≤ -–ö –≤—ã–¥–∞—á–∏ –∫—Ä–µ–¥–∏—Ç–∞",
            )
        )
        st.write("- –ì–∏–ø–æ—Ç–µ–∑–∞ –ø–æ—Ç–≤–µ—Ä–¥–∏–ª–∞—Å—å , –ª—é–¥–∏ —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Å–µ–º–µ–π–Ω—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –±–æ–ª–ª–µ –æ—Ç–≤–µ—Å—Ç–≤–Ω—ã–µ –∏ —Å—Ç—Ä–∞—è—é—Ç—Å—è –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–∏ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞.")
    if numberrealestatel_seriousdlqin2yrs:
        st.write("**–ì–∏–ø–æ—Ç–µ–∑–∞ ‚Ññ4** –ù–∞–ª–∏—á–∏–µ –∏–ø–æ—Ç–µ—á–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤ –∏ –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –ª–∏–Ω–∏–π –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å (NumberRealEstateLoansOrLines) –º–æ–∂–µ—Ç —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞ –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã—Ö –∑–∞–µ–º—â–∏–∫–æ–≤ —Å –º–µ–Ω—å—à–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é —Å–µ—Ä—å–µ–∑–Ω–æ–π –ø—Ä–æ—Å—Ä–æ—á–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π. "
                 "–ò–º—É—â–µ—Å—Ç–≤–æ –º–æ–∂–µ—Ç —Å–ª—É–∂–∏—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∏ –ø–æ–≤—ã—à–∞—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞–µ–º—â–∏–∫–∞. –í–∏–∑–∞–ª–∑—É—Ä—É–π –¥–∞–Ω–Ω—É—é –≥–∏–ø–æ—Ç–µ–∑—É")
        st.pyplot(
            bar_plot(
                data_grouped=data.groupby('NumberRealEstate')['SeriousDlqin2yrs'].mean(),
                x_label="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–µ–¥–∏—Ç–æ–≤ –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –∏–ª–∏ –ª–∏–Ω–∏–π",
                y_label="–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–µ—Ä—å–µ–∑–Ω–æ–≥–æ –ø—Ä–∞–≤–æ–Ω–∞—Ä—É—à–µ–Ω–∏—è",
                title="–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–µ—Ä—å–µ–∑–Ω–æ–π –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∫—Ä–µ–¥–∏—Ç–æ–≤ –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –∏–ª–∏ –ª–∏–Ω–∏–π",
            )
        )
        st.write("–î–∏–∞–≥—Ä–∞–º–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –∑–∞–µ–º—â–∏–∫–∏ —Å –Ω–∞–ª–∏—á–∏–µ–º –∏–ø–æ—Ç–µ—á–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤ –∏ –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –ª–∏–Ω–∏–π –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å (NumberRealEstateLoansOrLines) –∏–º–µ—é—Ç –±–æ–ª–µ–µ –Ω–∏–∑–∫—É—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–µ—Ä—å–µ–∑–Ω–æ–π –ø—Ä–æ—Å—Ä–æ—á–∫–∏ –ø–ª–∞—Ç–µ–∂–µ–π. –ó–∞–µ–º—â–∏–∫–∏ —Å –±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏–ø–æ—Ç–µ—á–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤ –∏ –∫—Ä–µ–¥–∏—Ç–Ω—ã—Ö –ª–∏–Ω–∏–π –Ω–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å –æ–±—ã—á–Ω–æ —è–≤–ª—è—é—Ç—Å—è –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–º–∏ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø–ª–∞—Ç–µ–ª—å—â–∏–∫–∞–º–∏. "
                 "–í–æ–∑–º–æ–∂–Ω–æ, –Ω–∞–ª–∏—á–∏–µ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –ø–æ–≤—ã—à–∞–µ—Ç –∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ.")


def training():
    """
    –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –º–æ–¥–µ–ª–∏
    """
    st.markdown("# Training model LightGBM")
    # get params
    with open(CONFIG_PATH) as file:
        config = yaml.load(file, Loader=yaml.FullLoader)
    # endpoint
    endpoint = config["endpoints"]["train"]

    if st.button("Start training"):
        start_training(config=config, endpoint=endpoint)


def prediction():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –ø—É—Ç–µ–º –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
    """
    st.markdown("# Prediction")
    with open(CONFIG_PATH) as file:
        config = yaml.load(file, Loader=yaml.FullLoader)
    endpoint = config["endpoints"]["prediction_input"]
    unique_data_path = config["preprocessing"]["unique_values_path"]

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
    if os.path.exists(config["train"]["model_path"]):
        evaluate_input(unique_data_path=unique_data_path, endpoint=endpoint)
    else:
        st.error("–°–Ω–∞—á–∞–ª–∞ –æ–±—É—á–∏—Ç–µ –º–æ–¥–µ–ª—å")


def prediction_from_file():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –∏–∑ —Ñ–∞–π–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    """
    st.markdown("# Prediction")
    with open(CONFIG_PATH) as file:
        config = yaml.load(file, Loader=yaml.FullLoader)
    endpoint = config["endpoints"]["prediction_from_file"]

    upload_file = st.file_uploader(
        "", type=["csv", "xlsx"], accept_multiple_files=False
    )
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —Ñ–∞–π–ª
    if upload_file:
        dataset_csv_df, files = load_data(data=upload_file, type_data="Test")
        # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏
        if os.path.exists(config["train"]["model_path"]):
            evaluate_from_file(data=dataset_csv_df, endpoint=endpoint, files=files)
        else:
            st.error("–°–Ω–∞—á–∞–ª–∞ –æ–±—É—á–∏—Ç–µ –º–æ–¥–µ–ª—å")


def main():
    """
    –°–±–æ—Ä–∫–∞ –ø–∞–π–ø–ª–∞–π–Ω–∞ –≤ –æ–¥–Ω–æ–º –±–ª–æ–∫–µ
    """
    page_names_to_funcs = {
        "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞": main_page,
        "Exploratory data analysis": exploratory,
        "Training model": training,
        "Prediction": prediction,
        "Prediction from file": prediction_from_file,
    }
    selected_page = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç", page_names_to_funcs.keys())
    page_names_to_funcs[selected_page]()


if __name__ == "__main__":
    main()
